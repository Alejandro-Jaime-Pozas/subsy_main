services:
  backend:
    build:
      context: ./subsy_backend
      args:
        - DEV=${DEV}
        - ZSCALER_CERTIFICATE=${ZSCALER_CERTIFICATE}  # ${ZSCALER_CERTIFICATE} doesn't work as dynamic varialbe, FIX!!
    # ports: local machine port first, then container port
    ports:
      - "8000:8000"
    # volumes used to persist data, we want to persist the backend dir
    # this creates a two way sync
    volumes:
      - ./subsy_backend/app:/backend
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - WATCHFILES_FORCE_POLLING=True
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    env_file:
      - ./subsy_backend/.env
    depends_on:
      - db
    # develop:
    # # supposedly, the watch below should trigger hot reloading
    #   watch:
    #     - action: sync
    #       path: ./subsy_backend/app
    #       target: /backend

  db:
    image: postgres:16-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    # these are env variables stored in the docker container
    ports:
      - "5433:5432"          # Expose PostgreSQL on localhost:5433
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

  frontend:
    build:
      context: ./subsy_frontend
      args:
        - DEV=true
    volumes:
      - ./subsy_frontend:/subsy_frontend      # Bind mount local frontend directory
      - subsy_frontend_node_modules:/subsy_frontend/node_modules
    environment:
      # Enable polling for file changes hot reloading
      WATCHPACK_POLLING: "true"
      WATCHPACK_POLLING_INTERVAL: "150"  # Optional: Adjust the interval (in ms)
    env_file:
      - ./subsy_frontend/.env
    depends_on:
      - backend                 # Wait for backend to start before starting frontend
    ports:
      - "3000:3000"          # Expose frontend on localhost:3000
    command: ["npm", "start"] # Start frontend app in dev mode
    # to check for changes on package.json while running and hot reload
    # develop:
    #   watch:
    #     - action: rebuild
    #       path: ./subsy_frontend/package.json

networks:
  default:
    driver: bridge

volumes:
  dev-db-data:
  subsy_frontend_node_modules:
